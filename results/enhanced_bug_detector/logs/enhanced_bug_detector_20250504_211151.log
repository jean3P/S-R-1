2025-05-04 21:11:51,004 [INFO] root (run_context_bug_detector.py:94): Logging initialized at results/enhanced_bug_detector/logs/enhanced_bug_detector_20250504_211151.log
2025-05-04 21:11:51,004 [INFO] root (run_context_bug_detector.py:150): Using features: Program Dependency Graph, Data Flow Graph, Attention Mechanism
2025-05-04 21:11:51,005 [INFO] src.data.astropy_synthetic_dataloader (astropy_synthetic_dataloader.py:60): Loading dataset from: /storage/homefs/jp22b083/SSI/S-R-1/src/data/astropy_implementation_bugs_dataset.csv
2025-05-04 21:11:51,005 [INFO] src.data.astropy_synthetic_dataloader (astropy_synthetic_dataloader.py:79): Loaded 1 issues from CSV dataset
2025-05-04 21:11:51,005 [INFO] root (run_context_bug_detector.py:158): Loaded 1 issues from dataset
2025-05-04 21:11:51,005 [INFO] root (run_context_bug_detector.py:167): Processing 1 issues: ['bug-values_to_high_level_objects-20250504210705-aca4210f']
2025-05-04 21:11:51,005 [INFO] root (run_context_bug_detector.py:173): Processing issue bug-values_to_high_level_objects-20250504210705-aca4210f
2025-05-04 21:11:51,005 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:306): Detecting bug location for issue bug-values_to_high_level_objects-20250504210705-aca4210f
2025-05-04 21:11:51,005 [INFO] src.data.astropy_synthetic_dataloader (astropy_synthetic_dataloader.py:60): Loading dataset from: /storage/homefs/jp22b083/SSI/S-R-1/src/data/astropy_implementation_bugs_dataset.csv
2025-05-04 21:11:51,005 [INFO] src.data.astropy_synthetic_dataloader (astropy_synthetic_dataloader.py:79): Loaded 1 issues from CSV dataset
2025-05-04 21:11:51,005 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:314): Successfully loaded issue bug-values_to_high_level_objects-20250504210705-aca4210f
2025-05-04 21:11:51,997 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:539): Git checkout branch: bug-values_to_high_level_objects-20250504210705-aca4210f
2025-05-04 21:11:51,997 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:324): Successfully checked out branch bug-values_to_high_level_objects-20250504210705-aca4210f
2025-05-04 21:11:52,000 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:2408): Running test: /storage/homefs/jp22b083/.conda/envs/astropy-dev/bin/python -m pytest /storage/homefs/jp22b083/SSI/S-R-1/data/repositories/astropy/astropy/astropy/wcs/wcsapi/tests/test_high_level_api.py::test_objects_to_values -v
2025-05-04 21:12:19,091 [INFO] src.utils.context_based_bug_detector (context_based_bug_detector.py:2458): Ouput after running: /storage/homefs/jp22b083/SSI/S-R-1/data/repositories/astropy/astropy/astropy/version.py:12: UserWarning: could not determine astropy package version; this indicates a broken installation
  warnings.warn(
Internet access disabled
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.11, pytest-8.3.5, pluggy-1.5.0 -- /storage/homefs/jp22b083/.conda/envs/astropy-dev/bin/python
cachedir: .pytest_cache
hypothesis profile 'ci' -> database=None, deadline=None, print_blob=True, derandomize=True, suppress_health_check=(HealthCheck.differing_executors,)

Running tests with Astropy version 0.0.0.
Running tests in /storage/homefs/jp22b083/SSI/S-R-1/data/repositories/astropy/astropy/astropy/wcs/wcsapi/tests/test_high_level_api.py::test_objects_to_values.

Date: 2025-05-04T21:12:09

Platform: Linux-5.14.0-503.21.1.el9_5.x86_64-x86_64-with-glibc2.34

Executable: /storage/homefs/jp22b083/.conda/envs/astropy-dev/bin/python

Full Python Version: 
3.11.11 (main, Dec 11 2024, 16:28:39) [GCC 11.2.0]

encodings: sys: utf-8, locale: UTF-8, filesystem: utf-8
byteorder: little
float info: dig: 15, mant_dig: 15

Package versions: 
Numpy: 1.26.4
Scipy: 1.15.2
Matplotlib: 3.10.1
h5py: 3.13.0
Pandas: 2.2.3
PyERFA: 2.0.1.5
Cython: 3.0.12
Scikit-image: not available
asdf-astropy: 0.7.1
pyarrow: 19.0.1

Using Astropy options: remote_data: none.

CI: undefined
ARCH_ON_CI: undefined
IS_CRON: undefined

rootdir: /storage/homefs/jp22b083/SSI/S-R-1/data/repositories/astropy/astropy
configfile: pyproject.toml
plugins: remotedata-0.4.1, asdf-4.1.0, astropy-0.11.0, arraydiff-0.6.1, hypothesis-6.131.9, cov-6.1.1, astropy-header-0.2.2, mock-3.14.0, filter-subpackage-0.2.0, xdist-3.6.1, doctestplus-1.4.0
[1mcollecting ... [0mcollected 1 item

data/repositories/astropy/astropy/astropy/wcs/wcsapi/tests/test_high_level_api.py::test_objects_to_values [31mFAILED[0m[31m [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_objects_to_values ____________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_objects_to_values[39;49;00m():[90m[39;49;00m
        wcs = SkyCoordDuplicateWCS()[90m[39;49;00m
>       c1, c2 = wcs.pixel_to_world([94m1[39;49;00m, [94m2[39;49;00m, [94m3[39;49;00m, [94m4[39;49;00m)[90m[39;49;00m

[1m[31mdata/repositories/astropy/astropy/astropy/wcs/wcsapi/tests/test_high_level_api.py[0m:193: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mdata/repositories/astropy/astropy/astropy/wcs/wcsapi/high_level_api.py[0m:366: in pixel_to_world
    [0mpixel_values = values_to_high_level_objects([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

low_level_wcs = <astropy.wcs.wcsapi.tests.test_high_level_api.SkyCoordDuplicateWCS object at 0x7f3af03324d0>
world_values = (2, 4, 6, 8), w = 2

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mvalues_to_high_level_objects[39;49;00m(*world_values, low_level_wcs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    Convert low level values into high level objects.[39;49;00m
    [33m[39;49;00m
    [33m    This function uses the information in ``wcs.world_axis_object_classes`` and[39;49;00m
    [33m    ``wcs.world_axis_object_components`` to convert low level "values"[39;49;00m
    [33m    `~.Quantity` objects, to high level objects (such as `~.SkyCoord`).[39;49;00m
    [33m[39;49;00m
    [33m    This is used in `.HighLevelWCSMixin.pixel_to_world`, but provided as a[39;49;00m
    [33m    separate function for use in other places where needed.[39;49;00m
    [33m[39;49;00m
    [33m    Parameters[39;49;00m
    [33m    ----------[39;49;00m
    [33m    *world_values: object[39;49;00m
    [33m        Low level, "values" representations of the world coordinates.[39;49;00m
    [33m[39;49;00m
    [33m    low_level_wcs: `.BaseLowLevelWCS`[39;49;00m
    [33m        The WCS object to use to interpret the coordinates.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [90m# Check the type of the input values - should be scalars or plain Numpy[39;49;00m[90m[39;49;00m
        [90m# arrays, not e.g. Quantity. Note that we deliberately use type(w) because[39;49;00m[90m[39;49;00m
        [90m# we don't want to match Numpy subclasses.[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m w [95min[39;49;00m world_values:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(w, numbers.Number) [95mor[39;49;00m [95mnot[39;49;00m [96mtype[39;49;00m(w) == np.ndarray:[90m[39;49;00m
>               [94mraise[39;49;00m [96mTypeError[39;49;00m([90m[39;49;00m
                    [33mf[39;49;00m[33m"[39;49;00m[33mExpected world coordinates as scalars or plain Numpy [39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [33mf[39;49;00m[33m"[39;49;00m[33marrays (got [39;49;00m[33m{[39;49;00m[96mtype[39;49;00m(w)[33m}[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                )[90m[39;49;00m
[1m[31mE               TypeError: Expected world coordinates as scalars or plain Numpy arrays (got <class 'numpy.int64'>)[0m

[1m[31mdata/repositories/astropy/astropy/astropy/wcs/wcsapi/high_level_api.py[0m:295: TypeError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m data/repositories/astropy/astropy/astropy/wcs/wcsapi/tests/test_high_level_api.py::[1mtest_objects_to_values[0m - TypeError: Expected world coordinates as scalars or plain Numpy arrays (got...
[31m============================== [31m[1m1 failed[0m[31m in 8.85s[0m[31m ===============================[0m

2025-05-04 21:12:19,097 [INFO] root (run_context_bug_detector.py:189): Detected bug location for issue bug-values_to_high_level_objects-20250504210705-aca4210f in 28.09 seconds
2025-05-04 21:12:19,097 [INFO] root (run_context_bug_detector.py:190): Bug type: logic_error
2025-05-04 21:12:19,098 [INFO] root (run_context_bug_detector.py:203): Saved bug location to results/enhanced_bug_detector/bug_location_bug-values_to_high_level_objects-20250504210705-aca4210f.json
2025-05-04 21:12:19,098 [INFO] root (run_context_bug_detector.py:218): Saved combined results to results/enhanced_bug_detector/bug_locations.json
2025-05-04 21:12:19,099 [INFO] root (run_context_bug_detector.py:279): Saved summary to results/enhanced_bug_detector/summary.json
