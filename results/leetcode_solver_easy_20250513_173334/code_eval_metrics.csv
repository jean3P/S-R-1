model,problem_id,k,pass_rate
deepseek-r1-distill,snake-in-matrix,pass@1,75.0
deepseek-r1-distill,snake-in-matrix,pass@3,100.0
deepseek-r1-distill,count-substrings-that-satisfy-k-constraint-i,pass@1,100.0
deepseek-r1-distill,count-substrings-that-satisfy-k-constraint-i,pass@3,100.0
deepseek-r1-distill,final-array-state-after-k-multiplication-operations-i,pass@1,100.0
deepseek-r1-distill,final-array-state-after-k-multiplication-operations-i,pass@3,100.0
deepseek-r1-distill,find-the-key-of-the-numbers,pass@1,100.0
deepseek-r1-distill,find-the-key-of-the-numbers,pass@3,100.0
deepseek-r1-distill,check-if-two-chessboard-squares-have-the-same-color,pass@1,100.0
deepseek-r1-distill,check-if-two-chessboard-squares-have-the-same-color,pass@3,100.0
deepseek-r1-distill,convert-date-to-binary,pass@1,100.0
deepseek-r1-distill,convert-date-to-binary,pass@3,100.0
deepseek-r1-distill,find-indices-of-stable-mountains,pass@1,100.0
deepseek-r1-distill,find-indices-of-stable-mountains,pass@3,100.0
deepseek-r1-distill,the-two-sneaky-numbers-of-digitville,pass@1,100.0
deepseek-r1-distill,the-two-sneaky-numbers-of-digitville,pass@3,100.0
deepseek-r1-distill,minimum-element-after-replacement-with-digit-sum,pass@1,100.0
deepseek-r1-distill,minimum-element-after-replacement-with-digit-sum,pass@3,100.0
deepseek-r1-distill,find-the-k-th-character-in-string-game-i,pass@1,80.0
deepseek-r1-distill,find-the-k-th-character-in-string-game-i,pass@3,100.0
deepseek-r1-distill,find-the-k-th-character-in-string-game-i,pass@5,100.0
deepseek-r1-distill,find-the-k-th-character-in-string-game-i,pass@10,100.0
deepseek-r1-distill,construct-the-minimum-bitwise-array-i,pass@1,39.99999999999999
deepseek-r1-distill,construct-the-minimum-bitwise-array-i,pass@3,79.51417004048584
deepseek-r1-distill,construct-the-minimum-bitwise-array-i,pass@5,93.54050406681985
deepseek-r1-distill,construct-the-minimum-bitwise-array-i,pass@10,99.76862718798203
deepseek-r1-distill,find-x-sum-of-all-k-long-subarrays-i,pass@1,0.0
deepseek-r1-distill,find-x-sum-of-all-k-long-subarrays-i,pass@3,0.0
deepseek-r1-distill,find-x-sum-of-all-k-long-subarrays-i,pass@5,0.0
deepseek-r1-distill,find-x-sum-of-all-k-long-subarrays-i,pass@10,0.0
deepseek-r1-distill,find-the-original-typed-string-i,pass@1,24.24242424242422
deepseek-r1-distill,find-the-original-typed-string-i,pass@3,57.84457478005864
deepseek-r1-distill,find-the-original-typed-string-i,pass@5,77.61401557285873
deepseek-r1-distill,find-the-original-typed-string-i,pass@10,96.46853579000408
deepseek-r1-distill,check-balanced-string,pass@1,100.0
deepseek-r1-distill,check-balanced-string,pass@3,100.0
deepseek-r1-distill,smallest-divisible-digit-product-i,pass@1,100.0
deepseek-r1-distill,smallest-divisible-digit-product-i,pass@3,100.0
deepseek-r1-distill,adjacent-increasing-subarrays-detection-i,pass@1,74.99999999999999
deepseek-r1-distill,adjacent-increasing-subarrays-detection-i,pass@3,99.28571428571429
deepseek-r1-distill,adjacent-increasing-subarrays-detection-i,pass@5,100.0
deepseek-r1-distill,adjacent-increasing-subarrays-detection-i,pass@10,100.0
deepseek-r1-distill,minimum-total-operations,pass@1,2.500000000000002
deepseek-r1-distill,minimum-total-operations,pass@3,7.499999999999996
deepseek-r1-distill,minimum-total-operations,pass@5,12.5
deepseek-r1-distill,minimum-total-operations,pass@10,25.0
deepseek-r1-distill,make-array-elements-equal-to-zero,pass@1,100.0
deepseek-r1-distill,make-array-elements-equal-to-zero,pass@3,100.0
qwen2-5-coder,snake-in-matrix,pass@1,75.0
qwen2-5-coder,snake-in-matrix,pass@3,100.0
qwen2-5-coder,count-substrings-that-satisfy-k-constraint-i,pass@1,42.105263157894726
qwen2-5-coder,count-substrings-that-satisfy-k-constraint-i,pass@3,82.97213622291022
qwen2-5-coder,count-substrings-that-satisfy-k-constraint-i,pass@5,96.0268317853457
qwen2-5-coder,count-substrings-that-satisfy-k-constraint-i,pass@10,99.98809240295309
qwen2-5-coder,final-array-state-after-k-multiplication-operations-i,pass@1,100.0
qwen2-5-coder,final-array-state-after-k-multiplication-operations-i,pass@3,100.0
qwen2-5-coder,find-the-key-of-the-numbers,pass@1,100.0
qwen2-5-coder,find-the-key-of-the-numbers,pass@3,100.0
qwen2-5-coder,check-if-two-chessboard-squares-have-the-same-color,pass@1,100.0
qwen2-5-coder,check-if-two-chessboard-squares-have-the-same-color,pass@3,100.0
qwen2-5-coder,convert-date-to-binary,pass@1,100.0
qwen2-5-coder,convert-date-to-binary,pass@3,100.0
qwen2-5-coder,find-indices-of-stable-mountains,pass@1,100.0
qwen2-5-coder,find-indices-of-stable-mountains,pass@3,100.0
qwen2-5-coder,the-two-sneaky-numbers-of-digitville,pass@1,7.500000000000007
qwen2-5-coder,the-two-sneaky-numbers-of-digitville,pass@3,21.356275303643724
qwen2-5-coder,the-two-sneaky-numbers-of-digitville,pass@5,33.75506072874494
qwen2-5-coder,the-two-sneaky-numbers-of-digitville,pass@10,58.906882591093115
qwen2-5-coder,minimum-element-after-replacement-with-digit-sum,pass@1,100.0
qwen2-5-coder,minimum-element-after-replacement-with-digit-sum,pass@3,100.0
qwen2-5-coder,find-the-k-th-character-in-string-game-i,pass@1,54.54545454545454
qwen2-5-coder,find-the-k-th-character-in-string-game-i,pass@3,92.20779220779221
qwen2-5-coder,find-the-k-th-character-in-string-game-i,pass@5,99.04306220095694
qwen2-5-coder,find-the-k-th-character-in-string-game-i,pass@10,99.99984535588251
qwen2-5-coder,construct-the-minimum-bitwise-array-i,pass@1,100.0
qwen2-5-coder,construct-the-minimum-bitwise-array-i,pass@3,100.0
qwen2-5-coder,find-x-sum-of-all-k-long-subarrays-i,pass@1,0.0
qwen2-5-coder,find-x-sum-of-all-k-long-subarrays-i,pass@3,0.0
qwen2-5-coder,find-x-sum-of-all-k-long-subarrays-i,pass@5,0.0
qwen2-5-coder,find-x-sum-of-all-k-long-subarrays-i,pass@10,0.0
qwen2-5-coder,find-the-original-typed-string-i,pass@1,0.0
qwen2-5-coder,find-the-original-typed-string-i,pass@3,0.0
qwen2-5-coder,find-the-original-typed-string-i,pass@5,0.0
qwen2-5-coder,find-the-original-typed-string-i,pass@10,0.0
qwen2-5-coder,check-balanced-string,pass@1,100.0
qwen2-5-coder,check-balanced-string,pass@3,100.0
qwen2-5-coder,smallest-divisible-digit-product-i,pass@1,100.0
qwen2-5-coder,smallest-divisible-digit-product-i,pass@3,100.0
qwen2-5-coder,adjacent-increasing-subarrays-detection-i,pass@1,100.0
qwen2-5-coder,adjacent-increasing-subarrays-detection-i,pass@3,100.0
qwen2-5-coder,minimum-total-operations,pass@1,75.0
qwen2-5-coder,minimum-total-operations,pass@3,100.0
qwen2-5-coder,make-array-elements-equal-to-zero,pass@1,100.0
qwen2-5-coder,make-array-elements-equal-to-zero,pass@3,100.0
qwq-preview,snake-in-matrix,pass@1,18.181818181818187
qwq-preview,snake-in-matrix,pass@3,47.01298701298702
qwq-preview,snake-in-matrix,pass@5,67.46411483253588
qwq-preview,snake-in-matrix,pass@10,93.23308270676691
qwq-preview,count-substrings-that-satisfy-k-constraint-i,pass@1,100.0
qwq-preview,count-substrings-that-satisfy-k-constraint-i,pass@3,100.0
qwq-preview,final-array-state-after-k-multiplication-operations-i,pass@1,100.0
qwq-preview,final-array-state-after-k-multiplication-operations-i,pass@3,100.0
qwq-preview,find-the-key-of-the-numbers,pass@1,100.0
qwq-preview,find-the-key-of-the-numbers,pass@3,100.0
qwq-preview,check-if-two-chessboard-squares-have-the-same-color,pass@1,100.0
qwq-preview,check-if-two-chessboard-squares-have-the-same-color,pass@3,100.0
qwq-preview,convert-date-to-binary,pass@1,100.0
qwq-preview,convert-date-to-binary,pass@3,100.0
qwq-preview,find-indices-of-stable-mountains,pass@1,100.0
qwq-preview,find-indices-of-stable-mountains,pass@3,100.0
qwq-preview,the-two-sneaky-numbers-of-digitville,pass@1,12.50000000000001
qwq-preview,the-two-sneaky-numbers-of-digitville,pass@3,33.755060728744944
qwq-preview,the-two-sneaky-numbers-of-digitville,pass@5,50.66442961179802
qwq-preview,the-two-sneaky-numbers-of-digitville,pass@10,78.34281650071124
qwq-preview,minimum-element-after-replacement-with-digit-sum,pass@1,100.0
qwq-preview,minimum-element-after-replacement-with-digit-sum,pass@3,100.0
qwq-preview,find-the-k-th-character-in-string-game-i,pass@1,100.0
qwq-preview,find-the-k-th-character-in-string-game-i,pass@3,100.0
qwq-preview,construct-the-minimum-bitwise-array-i,pass@1,100.0
qwq-preview,find-x-sum-of-all-k-long-subarrays-i,pass@1,0.0
qwq-preview,find-x-sum-of-all-k-long-subarrays-i,pass@3,0.0
qwq-preview,find-x-sum-of-all-k-long-subarrays-i,pass@5,0.0
qwq-preview,find-x-sum-of-all-k-long-subarrays-i,pass@10,0.0
qwq-preview,find-the-original-typed-string-i,pass@1,12.49999999999999
qwq-preview,find-the-original-typed-string-i,pass@3,34.28853754940712
qwq-preview,find-the-original-typed-string-i,pass@5,52.12450592885376
qwq-preview,find-the-original-typed-string-i,pass@10,82.01581027667984
qwq-preview,check-balanced-string,pass@1,100.0
qwq-preview,check-balanced-string,pass@3,100.0
qwq-preview,smallest-divisible-digit-product-i,pass@1,100.0
qwq-preview,smallest-divisible-digit-product-i,pass@3,100.0
qwq-preview,adjacent-increasing-subarrays-detection-i,pass@1,100.0
qwq-preview,adjacent-increasing-subarrays-detection-i,pass@3,100.0
qwq-preview,minimum-total-operations,pass@1,27.77777777777779
qwq-preview,minimum-total-operations,pass@3,64.95098039215686
qwq-preview,minimum-total-operations,pass@5,84.97899159663865
qwq-preview,minimum-total-operations,pass@10,99.34640522875817
qwq-preview,make-array-elements-equal-to-zero,pass@1,100.0
qwq-preview,make-array-elements-equal-to-zero,pass@3,100.0
